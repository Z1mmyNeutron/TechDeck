{"ast":null,"code":"// Example POST method implementation:\nexport async function postData() {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http://localhost:4000/back-end';\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let returnable = undefined;\n  try {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n\n    try {\n      console.log(\"response : \", response);\n      returnable = {\n        body: await response.json(),\n        status: response.status\n      };\n    } catch (e) {\n      console.log(\"err - \", e);\n      returnable = {\n        body: \"warning - json body not parseable... maybe it wasn't included\",\n        status: response.status\n      };\n    }\n  } catch (e) {\n    console.log(\"fetch request err - \", e);\n  }\n  return returnable; // parses JSON response into native JavaScript objects\n}","map":{"version":3,"names":["postData","url","data","returnable","undefined","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","console","log","json","status","e"],"sources":["/Users/chrissiezimmer/Desktop/javascriptProject/javascriptFinalProject/brown-hackathon/src/serverApi/server.js"],"sourcesContent":["// Example POST method implementation:\nexport async function postData(url = 'http://localhost:4000/back-end', data = {}) {\n    let returnable = undefined;\n\n\n    try {\n       \n    // Default options are marked with *\n    const response = await fetch(url, {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n\n    try {\n        console.log(\"response : \", response)\n        returnable = {\n            body: await response.json(),\n            status: response.status\n        }\n    } catch (e) {\n        console.log(\"err - \", e)\n        returnable = {\n            body: \"warning - json body not parseable... maybe it wasn't included\",\n            status: response.status\n        }\n    }\n} catch (e) {\n    console.log(\"fetch request err - \", e)\n}\n\n    return returnable; // parses JSON response into native JavaScript objects\n}"],"mappings":"AAAA;AACA,OAAO,eAAeA,QAAQ,GAAoD;EAAA,IAAnDC,GAAG,uEAAG,gCAAgC;EAAA,IAAEC,IAAI,uEAAG,CAAC,CAAC;EAC5E,IAAIC,UAAU,GAAGC,SAAS;EAG1B,IAAI;IAEJ;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;MAC9BM,MAAM,EAAE,MAAM;MAAE;MAChBC,IAAI,EAAE,MAAM;MAAE;MACdC,KAAK,EAAE,UAAU;MAAE;MACnBC,WAAW,EAAE,aAAa;MAAE;MAC5BC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,QAAQ,EAAE,QAAQ;MAAE;MACpBC,cAAc,EAAE,aAAa;MAAE;MAC/BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC;;IAEF,IAAI;MACAe,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEb,QAAQ,CAAC;MACpCF,UAAU,GAAG;QACTW,IAAI,EAAE,MAAMT,QAAQ,CAACc,IAAI,EAAE;QAC3BC,MAAM,EAAEf,QAAQ,CAACe;MACrB,CAAC;IACL,CAAC,CAAC,OAAOC,CAAC,EAAE;MACRJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEG,CAAC,CAAC;MACxBlB,UAAU,GAAG;QACTW,IAAI,EAAE,+DAA+D;QACrEM,MAAM,EAAEf,QAAQ,CAACe;MACrB,CAAC;IACL;EACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,CAAC,CAAC;EAC1C;EAEI,OAAOlB,UAAU,CAAC,CAAC;AACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}